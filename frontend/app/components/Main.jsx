"use client";
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { getReserves } from './charts/config';
import H2usdChart from './charts/h2usd-chart';
import { ethers } from 'ethers';

const Main = () => {

  const [reservesInfo, setReservesInfo] = useState([]);

  useEffect(() => {
    const updateStats = setInterval(() => {
        getCollateral();
    }, 1000);
    return () => clearInterval(updateStats);
}, [reservesInfo]);

useEffect(() => {
  counterNum()
}, [reservesInfo]);

  const getCollateral = async () => {
    try {
      const output = await getReserves();
      let coll1 = output.rsvAmount[0];
      let coll2 = output.rsvAmount[1];
      let h2usdSupply = ethers.formatUnits((output.h2usdSupply).toString(), 18);
      const reservesInfo = [{
        coinLogo: "h2usd-logo.png",
        colA: "USDT",
        collASupply: coll1,
        colB: "WETH",
        collBSupply: coll2,
        total: h2usdSupply
      }]
      setReservesInfo(reservesInfo);

    } catch (error) {
      console.error(error.message);
    }
  }

  async function counterNum() {
    const counters = document.querySelectorAll(".value");
    const speed = 400;
    
    counters.forEach(counter => {
       const animate = () => {
          const value = +counter.getAttribute('count');
          const data = +counter.innerText;
         
          const time = value / speed;
         if(data < value) {
              counter.innerText = (Math.ceil(data + time))
              setTimeout(animate, 1);
            }else{
              counter.innerText = value.toLocaleString();
            }
       }
       
       animate();
    });
}

  return (
    <div>
           <div className="backstyle reservesbackground">
      <Head>
        <title>H2DeX</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="reserveshero">
        <div className='py-3'>
      <h5 style={{ fontFamily: "SF Pro Display" }}>
            Stablecoins Are Meant To Be Agnostic.
          </h5>
          </div>
        <div className=" align-items-center px-2 mb-3 text-white rounded">
          <div className="d-grid col-lg-9 card px-1 my-1 text-center"
            style={{ backgroundColor: "transparent"}}>
            <div className="px-0">
              <H2usdChart />
            </div>
          </div>
        </div>
        <div className='d-grid col'>
          <h5 className="my-4" style={{ fontWeight: "bold", color: "white" }}>
            Live Reserves Stats
          </h5>
          </div>
        {reservesInfo.map((col, i) => (
          <div key={i} className="d-flex col-lg-9">
            <div className="d-grid " style={{ color: "white" }}>
              <img
                className=""
                src={col.coinLogo}
                width="150"
                style={{ opacity: "0.8" }}
              />
              <a
                target="_blank"
                href="https://sepolia.etherscan.io/token/0x9E66067C87Cba0FE643c85e5998EB59EDa661ef6"
              >
                <h6 style={{ fontFamily: "SF Pro Display" }}>
                  {" "}
                  Vault Contract
                </h6>
              </a>
            </div>
            <div
              className="d-grid card text-center col-lg-2 mx-2 my-1  reservesstats"
              style={{ color: "white", backgroundColor:'#39ff1410' }}
            >
              <p className="card-header">{col.colA}</p>
              <div className="card-body justify-contents-center align-items-center">
                <h5
                  className="reservesvalues value"
                  count={col.collASupply}  // custom attribute
                >
                  0
                </h5>
              </div>
            </div>
            <div
              className="d-grid card text-center col-lg-2 mx-1 my-1 reservesstats"
              style={{ color: "white", backgroundColor:'#39ff1410' }}
            >
              <p className="card-header">{col.colB}</p>
              <div className="card-body">
                <h5
                  className="reservesvalues value"
                  count={col.collBSupply}  // custom attribute
                >
                  0
                </h5>
              </div>
            </div>
            <div
              className="d-grid card text-center col-lg-4 mx-1 my-1 reservesstats"
              style={{ color: "white", backgroundColor:'#39ff1410' }}
            >
              <p className="card-header">Total Supply</p>
              <div className="card-body">
                <h5
                  className="value reservesvalues"
                  count={col.total}  // custom attribute
                >
                  0
                </h5>
              </div>
            </div>
          </div>
        ))}
              <div className='my-3'></div>
      </main>
    </div>
    </div>
  )
}

export default Main;